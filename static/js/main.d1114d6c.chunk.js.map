{"version":3,"sources":["pages/helpers/wallet.png","services/currenciesAPI.js","actions/index.js","actions/actionTypes.js","pages/Login.js","pages/helpers/index.js","pages/components/ExpensesForm.js","pages/components/Footer.js","pages/components/Header.js","pages/components/Table.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","currenciesAPI","a","fetch","response","json","data","apiOnSuccess","currencies","type","apiOnFailure","error","saveExpense","expense","exchangeRates","Login","props","handleSubmit","e","preventDefault","email","state","history","getEmail","localStorage","setItem","push","handleChange","target","value","setState","loginValidation","password","length","match","isDisabled","this","className","src","wallet","alt","width","onSubmit","data-testid","placeholder","onChange","disabled","React","Component","connect","dispatch","userLogin","methOpt","tagOpt","tableLabels","INITIAL_STATE","description","currency","method","tag","btnLabel","editId","btnDisabled","rdc","abbreviation","symbol","reduce","acc","curr","currencySymbols","LTC","BTC","ETH","XRP","DOGE","ExpensesForm","currenciesAndBRL","htmlFor","name","id","map","key","meth","Footer","href","rel","Header","changeCurr","heaCurr","logout","removeItem","totalExp","headerCurrency","allCurr","height","onClick","title","newCurrency","Table","isBRL","exp","altern","Number","ask","expenses","handleEdit","handleDelete","label","index","data-th","toLocaleString","maximumFractionDigits","minimumFractionDigits","split","Wallet","formValidation","sendExpense","editExpenses","calculateTotal","brlTotal","filter","find","getCurrencies","user","apiData","Object","keys","fetchExchangeRates","changeExpenses","App","userEmail","getItem","exact","path","component","render","to","Boolean","window","location","hostname","action","expLength","expenseObj","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,oC,mVCQ5BC,EANI,uCAAG,8BAAAC,EAAA,sEACGC,MAHV,+CAEO,cACdC,EADc,gBAEDA,EAASC,OAFR,cAEdC,EAFc,yBAGbA,GAHa,2CAAH,qDCYNC,EAAe,SAACC,GAAD,MAAiB,CAC3CC,KCb8B,mBDc9BD,eAGWE,EAAe,SAACC,GAAD,MAAY,CACtCF,KAAM,mBACNE,UAGWC,EAAc,SAACC,EAASC,GAAV,MAA6B,CACtDL,KCrBqB,eDsBrBI,QAAQ,2BAAMA,GAAP,IAAgBC,oB,qBEnBnBC,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAQC,EAAU,EAAKC,MAAfD,MACR,EAA8B,EAAKJ,MAA3BM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACjBC,aAAaC,QAAQ,mBAAoBL,GACzCG,EAASH,GACTE,EAAQI,KAAK,cAfI,EAkBnBC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MAAOpB,EAAa,EAAbA,KACjC,EAAKqB,SAAL,eAAiBrB,EAAOoB,GAAS,EAAKE,kBAnBrB,EAsBnBA,gBAAkB,WAChB,MAA4B,EAAKV,MAAzBD,EAAR,EAAQA,MAAR,EAAeY,SAIFC,QAHS,GAGkBb,EAAMc,MAD3B,+CAEjB,EAAKJ,SAAS,CAAEK,YAAY,IAE5B,EAAKL,SAAS,CAAEK,YAAY,KA5B9B,EAAKd,MAAQ,CACXD,MAAO,GACPY,SAAU,GACVG,YAAY,GALG,E,0CAkCnB,WACE,MAAwCC,KAAKf,MAArCD,EAAR,EAAQA,MAAOY,EAAf,EAAeA,SAAUG,EAAzB,EAAyBA,WACzB,OACE,yBAAKE,UAAU,cACb,2BACE,yBAAKC,IAAMC,IAASC,IAAI,kBAAkBC,MAAM,SAChD,4CAEF,yBAAKJ,UAAU,aACb,qCACA,0BAAMA,UAAU,aAAaK,SAAWN,KAAKnB,cAC3C,2BACE0B,cAAY,cACZlC,KAAK,QACLmC,YAAY,SACZf,MAAQT,EACRyB,SAAWT,KAAKT,eAElB,2BACEgB,cAAY,iBACZlC,KAAK,WACLmC,YAAY,QACZf,MAAQG,EACRa,SAAWT,KAAKT,eAElB,4BACElB,KAAK,SACLqC,SAAWX,GAFb,YAQJ,iC,GApEYY,IAAMC,YAqFXC,cAAQ,MAXI,SAACC,GAAD,MAAe,CACxC3B,SAAU,SAACH,GAAD,OAAW8B,EF7EE,SAAC9B,GAAD,MAAY,CACnCX,KCNmB,QDOnBW,SE2E8B+B,CAAU/B,QAU3B6B,CAAkClC,G,QC5FpCqC,EAAU,CAAC,WAAY,0BAAqB,yBAAoB,OAEhEC,EAAS,CAAC,oBAAe,QAAS,WAAY,aAAc,YAE5DC,EAAc,CACzB,kBACA,MAAO,yBACP,QAAS,QAAS,sBAClB,mBAAoB,wBAAsB,kBAG/BC,EAAgB,CAC3B1B,MAAO,GACP2B,YAAa,GACbC,SAAU,MACVC,OAAQN,EAAQ,GAChBO,IAAKN,EAAO,GACZO,SAAU,oBACVC,OAAQ,GACRC,aAAa,GA6DTC,EA1Da,CACjB,CACEN,SAAU,iBACVO,aAAc,MACdC,OAAQ,KAEV,CACER,SAAU,mBACVO,aAAc,MACdC,OAAQ,KAEV,CACER,SAAU,cACVO,aAAc,MACdC,OAAQ,MAEV,CACER,SAAU,gBACVO,aAAc,MACdC,OAAQ,KAEV,CACER,SAAU,sBACVO,aAAc,MACdC,OAAQ,QAEV,CACER,SAAU,wBACVO,aAAc,MACdC,OAAQ,UAEV,CACER,SAAU,gBACVO,aAAc,MACdC,OAAQ,UAEV,CACER,SAAU,YACVO,aAAc,MACdC,OAAQ,QAEV,CACER,SAAU,oBACVO,aAAc,MACdC,OAAQ,OAEV,CACER,SAAU,uBACVO,aAAc,MACdC,OAAQ,QAEV,CACER,SAAU,uBACVO,aAAc,MACdC,OAAQ,MAIWC,QAAO,SAACC,EAAKC,GAElC,OADAD,EAAIC,EAAKJ,cAAgBI,EAAKH,OACvBE,IACN,IAEUE,EAAe,2BACvBN,GADuB,IAE1BO,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,MACLC,KAAM,SCrFFC,G,kKACJ,WACE,MAGIvC,KAAKpB,MAFPa,EADF,EACEA,MAAO2B,EADT,EACSA,YAAaC,EADtB,EACsBA,SAAUK,EADhC,EACgCA,YAC9BJ,EAFF,EAEEA,OAAQC,EAFV,EAEUA,IAAKC,EAFf,EAEeA,SAAUpD,EAFzB,EAEyBA,WAAYS,EAFrC,EAEqCA,aAAcU,EAFnD,EAEmDA,aAE7CiD,EAAgB,sBAAOpE,GAAP,CAAmB,QACzC,OACE,0BAAMkC,SAAWzB,EAAeoB,UAAU,iBACxC,2BACEwC,QAAQ,QACRxC,UAAU,eAFZ,QAKE,2BACEM,cAAY,cACZlC,KAAK,SACLqE,KAAK,QACLjD,MAAQA,EACRe,YAAY,QACZC,SAAWlB,EACXU,UAAU,iBAGd,2BACEwC,QAAQ,cACRxC,UAAU,qBAFZ,kBAKE,2BACEM,cAAY,oBACZlC,KAAK,OACLqE,KAAK,cACLjD,MAAQ2B,EACRZ,YAAY,kBACZC,SAAWlB,KAGf,2BACEkD,QAAQ,WACRxC,UAAU,kBAFZ,QAKE,4BACEyC,KAAK,WACLC,GAAG,WACHlD,MAAQ4B,EACRZ,SAAWlB,EACXgB,cAAY,kBAGViC,EAAiBI,KAAI,SAACZ,GAAD,OACnB,4BAAQa,IAAMb,EAAOvC,MAAQuC,GAC1BA,QAMX,2BACES,QAAQ,SACRxC,UAAU,gBAFZ,yBAKE,4BACEyC,KAAK,SACLC,GAAG,SACHlD,MAAQ6B,EACRb,SAAWlB,EACXgB,cAAY,gBAGVS,EAAQ4B,KAAI,SAACE,GAAD,OACV,4BAAQD,IAAMC,EAAOrD,MAAQqD,GAC1BA,QAMX,2BACEL,QAAQ,MACRxC,UAAU,aAFZ,kBAKE,4BACEyC,KAAK,MACLC,GAAG,MACHlD,MAAQ8B,EACRd,SAAWlB,EACXgB,cAAY,aAGVU,EAAO2B,KAAI,SAACvE,GAAD,OACT,4BAAQwE,IAAMxE,EAAOoB,MAAQpB,GAC1BA,QAMX,4BAAQA,KAAK,SAASqC,SAAWgB,GAC9BF,Q,GAtGgBb,IAAMC,YAyHlBC,eAZS,SAAC5B,GAAD,MAAY,CAClCb,WAAYa,EAAMkB,OAAO/B,cAWZyC,CAAyB0B,G,gBCjGzBQ,E,4JAzBb,WACE,OACE,gCACE,yBAAK9C,UAAU,SACb,uBACE+C,KAAK,kCACLxD,OAAO,SACPyD,IAAI,cAEJ,kBAAC,IAAD,CAAchD,UAAU,cAE1B,uBACE+C,KAAK,kDACLxD,OAAO,SACPyD,IAAI,cAEJ,kBAAC,IAAD,CAA0BhD,UAAU,eAGxC,qE,GApBaU,IAAMC,W,wBCQrBsC,G,wDACJ,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAIRW,aAAe,YAA4B,IAAfE,EAAc,EAAxBD,OAAUC,OAE1B0D,EADuB,EAAKvE,MAApBuE,YACG1D,GACX,EAAKC,SAAS,CAAE0D,QAAS3D,KARR,EAWnB4D,OAAS,WACPjE,aAAakE,WAAW,oBACJ,EAAK1E,MAAjBM,QACAI,KAAK,MAZb,EAAKL,MAAQ,CAAEmE,QAAS,OAFP,E,0CAiBnB,WACE,MAAwDpD,KAAKpB,MAArDI,EAAR,EAAQA,MAAOuE,EAAf,EAAeA,SAAUnF,EAAzB,EAAyBA,WAAYoF,EAArC,EAAqCA,eAC7BJ,EAAYpD,KAAKf,MAAjBmE,QACFK,EAAO,sBAAOrF,GAAP,CAAmB,QAChC,OACE,gCACE,yBAAK6B,UAAU,cACb,yBAAKC,IAAMC,IAASC,IAAI,kBAAkBC,MAAM,OAAOqD,OAAO,SAC9D,4CAEF,yBAAKzD,UAAU,eACb,uBAAGM,cAAY,cAAcN,UAAU,aACrC,kBAAC,IAAD,CAAeA,UAAU,cACxBjB,GAEH,uBAAGiB,UAAU,eACX,kBAAC,IAAD,MACC,KACD,2BACGgC,EAAgBuB,GACjB,0BAAMjD,cAAY,eAAegD,KAGrC,yBAAKtD,UAAU,mBACb,kBAAC,IAAD,CAAyBA,UAAU,cACnC,4BACEM,cAAY,wBACZmC,KAAK,kBACLC,GAAG,kBACHlD,MAAQ2D,EACR3C,SAAWT,KAAKT,cAEfkE,EAAQb,KAAI,SAACZ,GAAD,OACX,4BAAQa,IAAMb,EAAOvC,MAAQuC,GAC1BA,QAKT,4BACE/B,UAAU,SACV0D,QAAU3D,KAAKqD,OACfhF,KAAK,SACLuF,MAAM,UAEN,kBAAC,IAAD,CAAU3D,UAAU,uB,GA/DXU,IAAMC,YAyFZC,eAlBS,SAAC5B,GAAD,MAAY,CAClCuE,eAAgBvE,EAAMkB,OAAOqD,mBAGJ,SAAC1C,GAAD,MAAe,CACxCqC,WAAY,SAACU,GAAD,OAAiB/C,ENtDsB,CACnDzC,KAAM,qBACNmF,eMoDuDK,QAa1ChD,CAA6CqC,GC7FtDY,G,kNACJC,MAAQ,SAACC,EAAKC,GAAN,MAAmC,QAAjBD,EAAI3C,SAC1B,EACA6C,OAAOD,EAAOE,M,4CAGlB,WAAU,IAAD,OACP,EAKInE,KAAKpB,MAJPwF,EADF,EACEA,SACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,aACAd,EAJF,EAIEA,eAGF,OACE,+BACE,wCACA,+BACGtC,EAAY0B,KAAI,SAAC2B,GAAD,OACf,wBAAI7B,KAAO6B,EAAQ1B,IAAM0B,GAASA,OAGrCH,EAASxB,KAAI,SAACoB,EAAKQ,GAAN,OACZ,2BAAO3B,IAAM2B,GACX,4BACE,wBAAIC,UAAUvD,EAAY,IACvB8C,EAAI5C,aAEP,wBAAIqD,UAAUvD,EAAY,IAAM8C,EAAIzC,KACpC,wBAAIkD,UAAUvD,EAAY,IAAM8C,EAAI1C,QACpC,wBAAImD,UAAUvD,EAAY,IAA1B,UACMe,EAAgB+B,EAAI3C,WAD1B,OACsC6C,OAAOF,EAAIvE,OAC5CiF,eAAe,QAAS,CACvBC,sBAAuB,EACvBC,sBAAuB,MAG7B,wBAAIH,UAAUvD,EAAY,IAEH,QAAnBsC,EACI,OACAQ,EAAItF,cAAc8E,GAAgBd,KAAKmC,MAAM,KAAK,IAG1D,wBAAIJ,UAAUvD,EAAY,IACvBe,EAAgBuB,GAEI,QAAnBA,EACI,EACCO,MAAMC,EAAKA,EAAItF,cAAcsF,EAAI3C,WACjCqD,eAAe,QAAS,CACvBC,sBAAuB,EACvBC,sBAAuB,KACxB,EAAKb,MAAMC,EAAKA,EAAItF,cAAcsF,EAAI3C,YACrC2C,EAAItF,cAAc8E,GAAgBW,KACnCO,eAAe,QAAS,CACvBC,sBAAuB,EACvBC,sBAAuB,KAGjC,wBAAIH,UAAUvD,EAAY,IACvBe,EAAgBuB,GAEI,QAAnBA,IACMQ,EAAIvE,MAAQ,EACbsE,MAAMC,EAAKA,EAAItF,cAAcsF,EAAI3C,YACjCqD,eAAe,QAAS,CACvBC,sBAAuB,EACvBC,sBAAuB,MACtBZ,EAAIvE,MAAQ,EACdsE,MAAMC,EAAKA,EAAItF,cAAcsF,EAAI3C,YAC/B2C,EAAItF,cAAc8E,GAAgBW,KACpCO,eAAe,QAAS,CACvBC,sBAAuB,EACvBC,sBAAuB,KAGjC,wBAAIH,UAAUvD,EAAY,IAEL,QAAjB8C,EAAI3C,SACA,OACA2C,EAAItF,cAAcsF,EAAI3C,UAAUqB,KAAKmC,MAAM,KAAK,IAGxD,wBAAI5E,UAAU,WACZ,4BACE5B,KAAK,SACLkC,cAAY,WACZN,UAAU,WACV0C,GAAKqB,EAAIrB,GACTgB,QAAUU,GAEV,kBAAC,IAAD,OAEF,4BACEhG,KAAK,SACLkC,cAAY,aACZN,UAAU,aACV0C,GAAKqB,EAAIrB,GACTgB,QAAUW,GAEV,kBAAC,IAAD,kB,GArGE3D,IAAMC,YA4HXC,eAZS,SAAC5B,GAAD,MAAY,CAClCmF,SAAUnF,EAAMkB,OAAOiE,SACvBZ,eAAgBvE,EAAMkB,OAAOqD,kBAUhB3C,CAAyBiD,GC1HlCgB,E,kDACJ,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IASRW,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MAAOiD,EAAa,EAAbA,KACjC,EAAKhD,SAAL,eACGgD,EAAOjD,GACP,EAAKsF,iBAbS,EAgBnBA,eAAiB,WACf,MAA+B,EAAK9F,MAA5BQ,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,YACX3B,EAAQ,GAAK2B,EAAYvB,OAAS,EACpC,EAAKH,SAAS,CAAEgC,aAAa,IACxB,EAAKhC,SAAS,CAAEgC,aAAa,KApBnB,EAuBnB7C,aAAe,SAACC,GACdA,EAAEC,iBACF,MAAgD,EAAKH,MAA7CoG,EAAR,EAAQA,YAAaZ,EAArB,EAAqBA,SAAUa,EAA/B,EAA+BA,aAC/B,EAAwE,EAAKhG,MAArEuC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQhC,EAA1B,EAA0BA,MAAO2B,EAAjC,EAAiCA,YAAaC,EAA9C,EAA8CA,SAAUC,EAAxD,EAAwDA,OAAQC,EAAhE,EAAgEA,IAC/C,sBAAbC,EACFwD,EAAY,CACVvF,QACA2B,cACAC,WACAC,SACAC,QAiBF0D,EAdoBb,EAASxB,KAAI,SAACoB,GAChC,OAAIA,EAAIrB,MAAQlB,EACP,YAAC,eACHuC,GADL,IAEEvE,QACA2B,cACAC,WACAC,SACAC,MACAoB,GAAIqB,EAAIrB,KAGLqB,MAIX,EAAKtE,SAASyB,IApDG,EAuDnB+D,eAAiB,WACf,MAAqC,EAAKtG,MAAlCwF,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,eACZ2B,EAAWf,EACdtC,QAAO,SAACC,EAAKtD,GAIZ,OAAOsD,IADHtD,EADFgB,OACEhB,EADKC,cACLD,EADoB4C,UAEwB8C,MAC/C,GAEL,MAAuB,QAAnBX,GAA4BY,EAASvE,SAE9BsF,GADKf,EAAS,GAAG1F,cACC8E,GAAgBW,KACxCO,eAAe,QAAS,CACvBC,sBAAuB,EACvBC,sBAAuB,IAEtBO,EAAST,eAAe,QAAS,CACtCC,sBAAuB,EACvBC,sBAAuB,KA1ER,EA6EnBN,aAAe,YAAyB,IAAZ3B,EAAW,EAArBnD,OAAUmD,GAC1B,EAAmC,EAAK/D,MAAhCwF,EAAR,EAAQA,UAGRa,EAHA,EAAkBA,cACEb,EACjBgB,QAAO,SAACpB,GAAD,OAASA,EAAIrB,MAAQA,MAE/B,EAAKjD,SAASyB,IAlFG,EAqFnBkD,WAAa,YAAyB,IAAZ1B,EAAW,EAArBnD,OAAUmD,GAExB,EADqB,EAAK/D,MAAlBwF,SAELiB,MAAK,SAACrB,GAAD,OAASA,EAAIrB,MAAQA,KADrBlD,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,SAAUC,EAAtC,EAAsCA,OAAQC,EAA9C,EAA8CA,IAE9C,EAAK7B,SAAS,CAAED,QACd2B,cACAC,WACAC,SACAC,MACAC,SAAU,iBACVC,OAAQkB,KA7FV,EAAK1D,MAAQkC,EAFI,E,qDAKnB,YAEEmE,EAD0BtF,KAAKpB,MAAvB0G,mB,oBA4FV,WACE,MAAuCtF,KAAKpB,MAApCI,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,WAAYc,EAA3B,EAA2BA,QAC3B,EAEIc,KAAKf,MADPQ,EADF,EACEA,MAAO2B,EADT,EACSA,YAAaC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,OAAQC,EADxC,EACwCA,IAAKC,EAD7C,EAC6CA,SAAUE,EADvD,EACuDA,YAEvD,OACE,oCACE,kBAAC,EAAD,CACE1C,MAAQA,EACRuE,SAAWvD,KAAKkF,iBAChB9G,WAAaA,EACbc,QAAUA,IAEZ,kBAAC,EAAD,CACEO,MAAQA,EACR2B,YAAcA,EACdC,SAAWA,EACXC,OAASA,EACTC,IAAMA,EACNC,SAAWA,EACXE,YAAcA,EACdtD,WAAaA,EACbS,aAAemB,KAAKnB,aACpBU,aAAeS,KAAKT,eAEtB,kBAAC,EAAD,CAAO8E,WAAarE,KAAKqE,WAAaC,aAAetE,KAAKsE,eAC1D,kBAAC,EAAD,W,GA7Ha3D,IAAMC,WAyJZC,eAvBS,SAAC5B,GAAD,MAAY,CAClCD,MAAOC,EAAMsG,KAAKvG,MAClBZ,WAAYa,EAAMkB,OAAO/B,WACzBgG,SAAUnF,EAAMkB,OAAOiE,SACvBZ,eAAgBvE,EAAMkB,OAAOqD,mBAGJ,SAAC1C,GAAD,MAAe,CACxCwE,cAAe,kBAAMxE,ER1GrB,uCAAO,WAAOA,GAAP,iBAAAhD,EAAA,6DACLgD,EAjC6B,CAC/BzC,KCVqB,YDyCd,kBAGmBR,IAHnB,OAGG2H,EAHH,OAIGpH,EAAaqH,OAAOC,KAAKF,GAASJ,QAAO,SAAC/D,GAAD,MAA2B,SAAbA,KAC7DP,EAAS3C,EAAaC,IALnB,gDAOH0C,EAASxC,EAAa,EAAD,KAPlB,yDAAP,wDQ2GA0G,YAAa,SAACvG,GAAD,OAAaqC,ER/FrB,SAA4BrC,GACjC,8CAAO,WAAOqC,GAAP,eAAAhD,EAAA,6DACLgD,EA9C6B,CAC/BzC,KCVqB,YDsDd,kBAGmBR,IAHnB,OAGG2H,EAHH,OAIH1E,EAAStC,EAAYC,EAAS+G,IAJ3B,gDAMH1E,EAASxC,EAAa,EAAD,KANlB,yDAAP,sDQ8FmCqH,CAAmBlH,KACtDwG,aAAc,SAACb,GAAD,OAActD,ERzHA,SAACsD,GAAD,MAAe,CAC3C/F,KAAM,SACN+F,YQuHqCwB,CAAexB,QAavCvD,CAA6CiE,GC5I7Ce,MAjBf,WACE,IAAMC,EAAY1G,aAAa2G,QAAQ,oBAEvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYpB,IAC1C,kBAAC,IAAD,CACEkB,OAAK,EACLC,KAAK,IACLE,OAAS,SAACvH,GAAD,OAAYkH,EACjB,kBAAC,IAAD,CAAUM,GAAG,cACb,kBAAC,EAAWxH,Q,MCLJyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1G,MACvB,2D,4BCjBAqB,EAAgB,CAAEnC,MADNI,aAAa2G,QAAQ,qBACK,IAc7BR,EAZF,WAAoC,IAAnCtG,EAAkC,uDAA1BkC,EAAesF,EAAW,uCAC9C,OAAQA,EAAOpI,MACf,IAAK,QACH,OAAO,2BACFY,GADL,IAEED,MAAOyH,EAAOzH,QAElB,QACE,OAAOC,ICTLkC,GAAgB,CACpB/C,WAAY,GACZgG,SAAU,GACVZ,eAAgB,OA8CHrD,GA3CA,WAAoC,IAAnClB,EAAkC,uDAA1BkC,GAAesF,EAAW,uCAChD,OAAQA,EAAOpI,MACf,IXTqB,UWUnB,OAAO,eACFY,GAEP,IXZ8B,mBWa5B,OAAO,2BACFA,GADL,IAEEb,WAAYqI,EAAOrI,aAEvB,IXhB8B,mBWiB5B,OAAO,2BACFa,GADL,IAEEV,MAAOkI,EAAOlI,QAElB,IAAK,eAEH,IAAMmI,EAAYzH,EAAMmF,SAASvE,OAC3B8G,EAAU,2BACXF,EAAOhI,SADI,IAEdkE,GAAK+D,GAAY,IAEnB,OAAO,2BACFzH,GADL,IAEEmF,SAAS,GAAD,mBAAMnF,EAAMmF,UAAZ,CAAsBuC,MAGlC,IAAK,SACH,OAAO,2BACF1H,GADL,IAEEmF,SAAUqC,EAAOrC,WAErB,IAAK,qBACH,OAAO,2BACFnF,GADL,IAEEuE,eAAgBiD,EAAOjD,iBAE3B,QACE,OAAOvE,ICtCI2H,GALKC,0BAAgB,CAClCtB,OACApF,YCMa2G,GAPDC,sBACZH,GACAI,8BACEC,0BAAgBC,OCCpBC,IAAShB,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUW,MAAQA,IAChB,kBAAC,EAAD,QAGJM,SAASC,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArJ,GACLsJ,QAAQtJ,MAAMA,EAAMuJ,c","file":"static/js/main.d1114d6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet.44103b8a.png\";","const APIURL = 'https://economia.awesomeapi.com.br/json/all';\n\nconst currenciesAPI = async () => {\n  const response = await fetch(APIURL);\n  const data = await response.json();\n  return data;\n};\n\nexport default currenciesAPI;\n","import currenciesAPI from '../services/currenciesAPI';\nimport { CURR_REQ_SUCCESS, EXPENSE, LOGIN, REQUIRE } from './actionTypes';\n\n// Actions\n\nexport const userLogin = (email) => ({\n  type: LOGIN,\n  email,\n});\n\nexport const apiRequest = () => ({\n  type: REQUIRE,\n});\n\nexport const apiOnSuccess = (currencies) => ({\n  type: CURR_REQ_SUCCESS,\n  currencies,\n});\n\nexport const apiOnFailure = (error) => ({\n  type: 'CURR_REQ_FAILURE',\n  error,\n});\n\nexport const saveExpense = (expense, exchangeRates) => ({\n  type: EXPENSE,\n  expense: { ...expense, exchangeRates },\n});\n\nexport const changeExpenses = (expenses) => ({\n  type: 'CHANGE',\n  expenses,\n});\n\nexport const changeHeaderCurr = (headerCurrency) => ({\n  type: 'CHANGE_HEADER_CURR',\n  headerCurrency,\n});\n\n// Thunk Functions\n\nexport function fetchCurrencies() {\n  return async (dispatch) => {\n    dispatch(apiRequest());\n    try {\n      const apiData = await currenciesAPI();\n      const currencies = Object.keys(apiData).filter((currency) => currency !== 'USDT');\n      dispatch(apiOnSuccess(currencies));\n    } catch (error) {\n      dispatch(apiOnFailure(error));\n    }\n  };\n}\n\nexport function fetchExchangeRates(expense) {\n  return async (dispatch) => {\n    dispatch(apiRequest());\n    try {\n      const apiData = await currenciesAPI();\n      dispatch(saveExpense(expense, apiData));\n    } catch (error) {\n      dispatch(apiOnFailure(error));\n    }\n  };\n}\n","export const LOGIN = 'LOGIN';\nexport const REQUIRE = 'REQUIRE';\nexport const CURR_REQ_SUCCESS = 'CURR_REQ_SUCCESS';\nexport const CURR_REQ_FAILURE = 'CURR_REQ_FAILURE';\nexport const EXPENSE = 'SAVE_EXPENSE';\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { userLogin } from '../actions';\nimport wallet from './helpers/wallet.png';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { email } = this.state;\n    const { history, getEmail } = this.props;\n    localStorage.setItem('trybewallet-user', email);\n    getEmail(email);\n    history.push('/carteira');\n  }\n\n  handleChange = ({ target: { value, type } }) => {\n    this.setState({ [type]: value }, this.loginValidation);\n  }\n\n  loginValidation = () => {\n    const { email, password } = this.state;\n    const minPassLength = 6;\n    // Padrão regex retirado do site https://www.w3resource.com/javascript/form/email-validation.php\n    const validEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (password.length >= minPassLength && email.match(validEmail)) {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    return (\n      <div className=\"login-page\">\n        <p>\n          <img src={ wallet } alt=\"Imagem carteira\" width=\"50px\" />\n          <h1>TrybeWallet</h1>\n        </p>\n        <div className=\"login-box\">\n          <h2>Login</h2>\n          <form className=\"login-form\" onSubmit={ this.handleSubmit }>\n            <input\n              data-testid=\"email-input\"\n              type=\"email\"\n              placeholder=\"E-mail\"\n              value={ email }\n              onChange={ this.handleChange }\n            />\n            <input\n              data-testid=\"password-input\"\n              type=\"password\"\n              placeholder=\"Senha\"\n              value={ password }\n              onChange={ this.handleChange }\n            />\n            <button\n              type=\"submit\"\n              disabled={ isDisabled }\n            >\n              Entrar\n            </button>\n          </form>\n        </div>\n        <p />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getEmail: (email) => dispatch(userLogin(email)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  getEmail: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const methOpt = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito', 'PIX'];\n\nexport const tagOpt = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nexport const tableLabels = [\n  'Descrição',\n  'Tag', 'Método de pagamento',\n  'Valor', 'Moeda', 'Câmbio utilizado',\n  'Valor convertido', 'Moeda de conversão', 'Editar/Excluir',\n];\n\nexport const INITIAL_STATE = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: methOpt[0],\n  tag: tagOpt[0],\n  btnLabel: 'Adicionar despesa',\n  editId: '',\n  btnDisabled: true,\n};\n\nconst symbolsArr = [\n  {\n    currency: 'Argentina Peso',\n    abbreviation: 'ARS',\n    symbol: '$',\n  },\n  {\n    currency: 'Australia Dollar',\n    abbreviation: 'AUD',\n    symbol: '$',\n  },\n  {\n    currency: 'Brazil Real',\n    abbreviation: 'BRL',\n    symbol: 'R$',\n  },\n  {\n    currency: 'Canada Dollar',\n    abbreviation: 'CAD',\n    symbol: '$',\n  },\n  {\n    currency: 'China Yuan Renminbi',\n    abbreviation: 'CNY',\n    symbol: '¥',\n  },\n  {\n    currency: 'Euro Member Countries',\n    abbreviation: 'EUR',\n    symbol: '€',\n  },\n  {\n    currency: 'Israel Shekel',\n    abbreviation: 'ILS',\n    symbol: '₪',\n  },\n  {\n    currency: 'Japan Yen',\n    abbreviation: 'JPY',\n    symbol: '¥',\n  },\n  {\n    currency: 'Switzerland Franc',\n    abbreviation: 'CHF',\n    symbol: 'CHF',\n  },\n  {\n    currency: 'United Kingdom Pound',\n    abbreviation: 'GBP',\n    symbol: '£',\n  },\n  {\n    currency: 'United States Dollar',\n    abbreviation: 'USD',\n    symbol: '$',\n  },\n];\n\nconst rdc = symbolsArr.reduce((acc, curr) => {\n  acc[curr.abbreviation] = curr.symbol;\n  return acc;\n}, {});\n\nexport const currencySymbols = {\n  ...rdc,\n  LTC: 'Ł',\n  BTC: '₿',\n  ETH: 'Ξ',\n  XRP: 'XRP',\n  DOGE: 'Ð',\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { methOpt, tagOpt } from '../helpers';\nimport './ExpensesForm.css';\n\nclass ExpensesForm extends React.Component {\n  render() {\n    const {\n      value, description, currency, btnDisabled,\n      method, tag, btnLabel, currencies, handleSubmit, handleChange,\n    } = this.props;\n    const currenciesAndBRL = [...currencies, 'BRL'];\n    return (\n      <form onSubmit={ handleSubmit } className=\"expenses-form\">\n        <label\n          htmlFor=\"value\"\n          className=\"value-label\"\n        >\n          Valor\n          <input\n            data-testid=\"value-input\"\n            type=\"number\"\n            name=\"value\"\n            value={ value }\n            placeholder=\"Valor\"\n            onChange={ handleChange }\n            className=\"value-input\"\n          />\n        </label>\n        <label\n          htmlFor=\"description\"\n          className=\"description-label\"\n        >\n          Descrição\n          <input\n            data-testid=\"description-input\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            placeholder=\"Descrição\"\n            onChange={ handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"currency\"\n          className=\"currency-label\"\n        >\n          Moeda\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            value={ currency }\n            onChange={ handleChange }\n            data-testid=\"currency-input\"\n          >\n            {\n              currenciesAndBRL.map((curr) => (\n                <option key={ curr } value={ curr }>\n                  {curr}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n        <label\n          htmlFor=\"method\"\n          className=\"method-label\"\n        >\n          Método de Pagamento\n          <select\n            name=\"method\"\n            id=\"method\"\n            value={ method }\n            onChange={ handleChange }\n            data-testid=\"method-input\"\n          >\n            {\n              methOpt.map((meth) => (\n                <option key={ meth } value={ meth }>\n                  {meth}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n        <label\n          htmlFor=\"tag\"\n          className=\"tag-label\"\n        >\n          Tipo de Despesa\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ handleChange }\n            data-testid=\"tag-input\"\n          >\n            {\n              tagOpt.map((type) => (\n                <option key={ type } value={ type }>\n                  {type}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n        <button type=\"submit\" disabled={ btnDisabled }>\n          {btnLabel}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nExpensesForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string),\n  getCurrencies: PropTypes.func,\n  sendExpense: PropTypes.func,\n  editExpenses: PropTypes.func,\n  btnDisabled: PropTypes.bool,\n}.isRequired;\n\nexport default connect(mapStateToProps)(ExpensesForm);\n","import React from 'react';\nimport { RiGithubLine } from 'react-icons/ri';\nimport { TiSocialLinkedinCircular } from 'react-icons/ti';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <div className=\"icons\">\n          <a\n            href=\"https://github.com/lalanametala\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <RiGithubLine className=\"sm-icons\" />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/la%C3%ADs-nametala/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <TiSocialLinkedinCircular className=\"sm-icons\" />\n          </a>\n        </div>\n        <p>Desenvolvido por Laís Nametala</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { FaCoins } from 'react-icons/fa';\nimport { FiLogOut } from 'react-icons/fi';\nimport { RiMoneyDollarCircleLine } from 'react-icons/ri';\nimport { connect } from 'react-redux';\nimport { changeHeaderCurr } from '../../actions';\nimport { currencySymbols } from '../helpers';\nimport wallet from '../helpers/wallet.png';\nimport './Header.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { heaCurr: 'BRL' };\n  }\n\n  handleChange = ({ target: { value } }) => {\n    const { changeCurr } = this.props;\n    changeCurr(value);\n    this.setState({ heaCurr: value });\n  }\n\n  logout = () => {\n    localStorage.removeItem('trybewallet-user');\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  render() {\n    const { email, totalExp, currencies, headerCurrency } = this.props;\n    const { heaCurr } = this.state;\n    const allCurr = [...currencies, 'BRL'];\n    return (\n      <header>\n        <div className=\"title-logo\">\n          <img src={ wallet } alt=\"Imagem carteira\" width=\"40px\" height=\"40px\" />\n          <h3>TrybeWallet</h3>\n        </div>\n        <div className=\"header-info\">\n          <p data-testid=\"email-field\" className=\"user-info\">\n            <AiOutlineUser className=\"user-icon\" />\n            {email}\n          </p>\n          <p className=\"total-field\">\n            <FaCoins />\n            {'  '}\n            <p>\n              {currencySymbols[headerCurrency]}\n              <span data-testid=\"total-field\">{totalExp}</span>\n            </p>\n          </p>\n          <div className=\"currency-choice\">\n            <RiMoneyDollarCircleLine className=\"curr-icon\" />\n            <select\n              data-testid=\"header-currency-field\"\n              name=\"header-currency\"\n              id=\"header-currency\"\n              value={ heaCurr }\n              onChange={ this.handleChange }\n            >\n              {allCurr.map((curr) => (\n                <option key={ curr } value={ curr }>\n                  {curr}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            className=\"logout\"\n            onClick={ this.logout }\n            type=\"button\"\n            title=\"Logout\"\n          >\n            <FiLogOut className=\"logout-icon\" />\n          </button>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  headerCurrency: state.wallet.headerCurrency,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeCurr: (newCurrency) => dispatch(changeHeaderCurr(newCurrency)),\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  totalExp: PropTypes.number,\n  changeCurr: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  headerCurrency: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FiTrash2 } from 'react-icons/fi';\nimport { RiEditLine } from 'react-icons/ri';\nimport { connect } from 'react-redux';\nimport { currencySymbols, tableLabels } from '../helpers';\nimport './Table.css';\n\nclass Table extends React.Component {\n  isBRL = (exp, altern) => (exp.currency === 'BRL'\n    ? 1.00\n    : Number(altern.ask)\n  )\n\n  render() {\n    const {\n      expenses,\n      handleEdit,\n      handleDelete,\n      headerCurrency,\n    } = this.props;\n\n    return (\n      <table>\n        <h3>Despesas</h3>\n        <thead>\n          {tableLabels.map((label) => (\n            <th name={ label } key={ label }>{label}</th>\n          ))}\n        </thead>\n        {expenses.map((exp, index) => (\n          <tbody key={ index }>\n            <tr>\n              <td data-th={ tableLabels[0] }>\n                {exp.description}\n              </td>\n              <td data-th={ tableLabels[1] }>{exp.tag}</td>\n              <td data-th={ tableLabels[2] }>{exp.method}</td>\n              <td data-th={ tableLabels[3] }>\n                {`${currencySymbols[exp.currency]}${Number(exp.value)\n                  .toLocaleString('pt-BR', {\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2 })}`}\n\n              </td>\n              <td data-th={ tableLabels[4] }>\n                {\n                  headerCurrency === 'BRL'\n                    ? 'Real'\n                    : exp.exchangeRates[headerCurrency].name.split('/')[0]\n                }\n              </td>\n              <td data-th={ tableLabels[5] }>\n                {currencySymbols[headerCurrency]}\n                {\n                  headerCurrency === 'BRL'\n                    ? this\n                      .isBRL(exp, exp.exchangeRates[exp.currency])\n                      .toLocaleString('pt-BR', {\n                        maximumFractionDigits: 2,\n                        minimumFractionDigits: 2 })\n                    : (this.isBRL(exp, exp.exchangeRates[exp.currency])\n                    / (+exp.exchangeRates[headerCurrency].ask))\n                      .toLocaleString('pt-BR', {\n                        maximumFractionDigits: 2,\n                        minimumFractionDigits: 2 })\n                }\n              </td>\n              <td data-th={ tableLabels[6] }>\n                {currencySymbols[headerCurrency]}\n                {\n                  headerCurrency === 'BRL'\n                    ? (+exp.value * this\n                      .isBRL(exp, exp.exchangeRates[exp.currency]))\n                      .toLocaleString('pt-BR', {\n                        maximumFractionDigits: 2,\n                        minimumFractionDigits: 2 })\n                    : ((+exp.value * this\n                      .isBRL(exp, exp.exchangeRates[exp.currency]))\n                      / +exp.exchangeRates[headerCurrency].ask)\n                      .toLocaleString('pt-BR', {\n                        maximumFractionDigits: 2,\n                        minimumFractionDigits: 2 })\n                }\n              </td>\n              <td data-th={ tableLabels[7] }>\n                {\n                  exp.currency === 'BRL'\n                    ? 'Real'\n                    : exp.exchangeRates[exp.currency].name.split('/')[0]\n                }\n              </td>\n              <td className=\"buttons\">\n                <button\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                  className=\"edit-btn\"\n                  id={ exp.id }\n                  onClick={ handleEdit }\n                >\n                  <RiEditLine />\n                </button>\n                <button\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                  className=\"delete-btn\"\n                  id={ exp.id }\n                  onClick={ handleDelete }\n                >\n                  <FiTrash2 />\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  headerCurrency: state.wallet.headerCurrency,\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object),\n  handleEdit: PropTypes.func,\n  handleDelete: PropTypes.func,\n  headerCurrency: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Table);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeExpenses, fetchCurrencies, fetchExchangeRates } from '../actions';\nimport ExpensesForm from './components/ExpensesForm';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport { INITIAL_STATE } from './helpers';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({\n      [name]: value,\n    }, this.formValidation);\n  }\n\n  formValidation = () => {\n    const { value, description } = this.state;\n    if (value > 0 && description.length > 2) {\n      this.setState({ btnDisabled: false });\n    } else this.setState({ btnDisabled: true });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { sendExpense, expenses, editExpenses } = this.props;\n    const { btnLabel, editId, value, description, currency, method, tag } = this.state;\n    if (btnLabel === 'Adicionar despesa') {\n      sendExpense({\n        value,\n        description,\n        currency,\n        method,\n        tag,\n      });\n    } else {\n      const newExpenses = expenses.map((exp) => {\n        if (exp.id === +editId) {\n          return ({\n            ...exp,\n            value,\n            description,\n            currency,\n            method,\n            tag,\n            id: exp.id,\n          });\n        }\n        return exp;\n      });\n      editExpenses(newExpenses);\n    }\n    this.setState(INITIAL_STATE);\n  }\n\n  calculateTotal = () => {\n    const { expenses, headerCurrency } = this.props;\n    const brlTotal = expenses\n      .reduce((acc, expense) => {\n        const {\n          value, exchangeRates, currency,\n        } = expense;\n        return acc + (+value * +exchangeRates[currency].ask);\n      }, 0);\n\n    if (headerCurrency !== 'BRL' && expenses.length) {\n      const rates = expenses[0].exchangeRates;\n      return (+brlTotal / +rates[headerCurrency].ask)\n        .toLocaleString('pt-BR', {\n          maximumFractionDigits: 2,\n          minimumFractionDigits: 2 });\n    }\n    return brlTotal.toLocaleString('pt-BR', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2 });\n  }\n\n  handleDelete = ({ target: { id } }) => {\n    const { expenses, editExpenses } = this.props;\n    const newExpenses = expenses\n      .filter((exp) => exp.id !== +id);\n    editExpenses(newExpenses);\n    this.setState(INITIAL_STATE);\n  }\n\n  handleEdit = ({ target: { id } }) => {\n    const { expenses } = this.props;\n    const { value, description, currency, method, tag } = expenses\n      .find((exp) => exp.id === +id);\n    this.setState({ value,\n      description,\n      currency,\n      method,\n      tag,\n      btnLabel: 'Editar despesa',\n      editId: id });\n  }\n\n  render() {\n    const { email, currencies, history } = this.props;\n    const {\n      value, description, currency, method, tag, btnLabel, btnDisabled,\n    } = this.state;\n    return (\n      <>\n        <Header\n          email={ email }\n          totalExp={ this.calculateTotal() }\n          currencies={ currencies }\n          history={ history }\n        />\n        <ExpensesForm\n          value={ value }\n          description={ description }\n          currency={ currency }\n          method={ method }\n          tag={ tag }\n          btnLabel={ btnLabel }\n          btnDisabled={ btnDisabled }\n          currencies={ currencies }\n          handleSubmit={ this.handleSubmit }\n          handleChange={ this.handleChange }\n        />\n        <Table handleEdit={ this.handleEdit } handleDelete={ this.handleDelete } />\n        <Footer />\n      </>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  headerCurrency: state.wallet.headerCurrency,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n  sendExpense: (expense) => dispatch(fetchExchangeRates(expense)),\n  editExpenses: (expenses) => dispatch(changeExpenses(expenses)),\n});\n\nWallet.propTypes = {\n  email: PropTypes.string,\n  currencies: PropTypes.arrayOf(PropTypes.string),\n  expenses: PropTypes.arrayOf(PropTypes.object),\n  getCurrencies: PropTypes.func,\n  sendExpense: PropTypes.func,\n  editExpenses: PropTypes.func,\n  headerCurrency: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  const userEmail = localStorage.getItem('trybewallet-user');\n\n  return (\n    <Switch>\n      <Route exact path=\"/carteira\" component={ Wallet } />\n      <Route\n        exact\n        path=\"/\"\n        render={ (props) => (userEmail\n          ? <Redirect to=\"/carteira\" />\n          : <Login { ...props } />) }\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const userEmail = localStorage.getItem('trybewallet-user');\nconst INITIAL_STATE = { email: userEmail || '' };\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return {\n      ...state,\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { CURR_REQ_FAILURE, CURR_REQ_SUCCESS, REQUIRE } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  headerCurrency: 'BRL',\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUIRE:\n    return {\n      ...state,\n    };\n  case CURR_REQ_SUCCESS:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case CURR_REQ_FAILURE:\n    return {\n      ...state,\n      error: action.error,\n    };\n  case 'SAVE_EXPENSE':\n  {\n    const expLength = state.expenses.length;\n    const expenseObj = {\n      ...action.expense,\n      id: !expLength ? 0 : expLength,\n    };\n    return {\n      ...state,\n      expenses: [...state.expenses, expenseObj],\n    };\n  }\n  case 'CHANGE':\n    return {\n      ...state,\n      expenses: action.expenses,\n    };\n  case 'CHANGE_HEADER_CURR':\n    return {\n      ...state,\n      headerCurrency: action.headerCurrency,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}